
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MesScalarFieldEnum = {
  id: 'id',
  año: 'año',
  mes: 'mes',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  totalIngresos: 'totalIngresos',
  totalGastos: 'totalGastos',
  totalPagos: 'totalPagos',
  saldoFinal: 'saldoFinal',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IngresoScalarFieldEnum = {
  id: 'id',
  mesId: 'mesId',
  fecha: 'fecha',
  monto: 'monto',
  concepto: 'concepto',
  categoryId: 'categoryId',
  createdAt: 'createdAt'
};

exports.Prisma.GastoScalarFieldEnum = {
  id: 'id',
  mesId: 'mesId',
  fecha: 'fecha',
  monto: 'monto',
  concepto: 'concepto',
  categoryId: 'categoryId',
  createdAt: 'createdAt'
};

exports.Prisma.PagoScalarFieldEnum = {
  id: 'id',
  mesId: 'mesId',
  fecha: 'fecha',
  monto: 'monto',
  concepto: 'concepto',
  categoryId: 'categoryId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Mes: 'Mes',
  Category: 'Category',
  Ingreso: 'Ingreso',
  Gasto: 'Gasto',
  Pago: 'Pago'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/fedepaz/Documents/proyectos/appFinance/finance-app/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/fedepaz/Documents/proyectos/appFinance/finance-app/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// Schema Prisma Minimalista - Versión Inicial\n// Expandir según necesites más funcionalidades\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================\n// TABLA PRINCIPAL: MES\n// ============================================\nmodel Mes {\n  id          Int      @id @default(autoincrement())\n  año        Int\n  mes         Int // 1-12\n  fechaInicio DateTime\n  fechaFin    DateTime\n\n  // Totales calculados (se actualizan automáticamente)\n  totalIngresos Decimal @default(0) @db.Decimal(12, 2)\n  totalGastos   Decimal @default(0) @db.Decimal(12, 2)\n  totalPagos    Decimal @default(0) @db.Decimal(12, 2)\n  saldoFinal    Decimal @default(0) @db.Decimal(12, 2)\n\n  // Relaciones\n  ingresos Ingreso[]\n  gastos   Gasto[]\n  pagos    Pago[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([año, mes])\n  @@index([año, mes])\n}\n\n// ============================================\n// CATEGORÍAS\n// ============================================\nmodel Category {\n  id     Int    @id @default(autoincrement())\n  nombre String @unique\n\n  // Relaciones (opcional, para ver todos los movimientos de una categoría)\n  ingresos Ingreso[]\n  gastos   Gasto[]\n  pagos    Pago[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n// ============================================\n// INGRESOS\n// ============================================\nmodel Ingreso {\n  id    Int @id @default(autoincrement())\n  mesId Int\n  mes   Mes @relation(fields: [mesId], references: [id], onDelete: Cascade)\n\n  fecha    DateTime\n  monto    Decimal  @db.Decimal(12, 2)\n  concepto String\n\n  categoryId Int\n  category   Category @relation(fields: [categoryId], references: [id])\n\n  createdAt DateTime @default(now())\n\n  @@index([mesId, fecha])\n  @@index([categoryId])\n}\n\n// ============================================\n// GASTOS\n// ============================================\nmodel Gasto {\n  id    Int @id @default(autoincrement())\n  mesId Int\n  mes   Mes @relation(fields: [mesId], references: [id], onDelete: Cascade)\n\n  fecha    DateTime\n  monto    Decimal  @db.Decimal(12, 2)\n  concepto String\n\n  categoryId Int\n  category   Category @relation(fields: [categoryId], references: [id])\n\n  createdAt DateTime @default(now())\n\n  @@index([mesId, fecha])\n  @@index([categoryId])\n}\n\n// ============================================\n// PAGOS\n// ============================================\nmodel Pago {\n  id    Int @id @default(autoincrement())\n  mesId Int\n  mes   Mes @relation(fields: [mesId], references: [id], onDelete: Cascade)\n\n  fecha    DateTime\n  monto    Decimal  @db.Decimal(12, 2)\n  concepto String\n\n  categoryId Int\n  category   Category @relation(fields: [categoryId], references: [id])\n\n  createdAt DateTime @default(now())\n\n  @@index([mesId, fecha])\n  @@index([categoryId])\n}\n",
  "inlineSchemaHash": "f584eba35e4152ed66fb061fe94a2ad9f73e4445367163ecc3b84391837589b9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Mes\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"año\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fechaInicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaFin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalIngresos\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalGastos\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPagos\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"saldoFinal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ingresos\",\"kind\":\"object\",\"type\":\"Ingreso\",\"relationName\":\"IngresoToMes\"},{\"name\":\"gastos\",\"kind\":\"object\",\"type\":\"Gasto\",\"relationName\":\"GastoToMes\"},{\"name\":\"pagos\",\"kind\":\"object\",\"type\":\"Pago\",\"relationName\":\"MesToPago\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ingresos\",\"kind\":\"object\",\"type\":\"Ingreso\",\"relationName\":\"CategoryToIngreso\"},{\"name\":\"gastos\",\"kind\":\"object\",\"type\":\"Gasto\",\"relationName\":\"CategoryToGasto\"},{\"name\":\"pagos\",\"kind\":\"object\",\"type\":\"Pago\",\"relationName\":\"CategoryToPago\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Ingreso\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mesId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mes\",\"kind\":\"object\",\"type\":\"Mes\",\"relationName\":\"IngresoToMes\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"concepto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToIngreso\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Gasto\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mesId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mes\",\"kind\":\"object\",\"type\":\"Mes\",\"relationName\":\"GastoToMes\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"concepto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToGasto\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Pago\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mesId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mes\",\"kind\":\"object\",\"type\":\"Mes\",\"relationName\":\"MesToPago\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"concepto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToPago\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

